branches:
  only:
    - master

init:
  - ps: $env:APPVEYOR_SAVE_CACHE_ON_ERROR = "true"

cache:
#  - downloads
  - C:\Program Files (x86)\Assimp
  - C:\Program Files\Assimp

environment:
# these variables are common to all jobs
  GENERATOR: "NMake Makefiles"
  DROPBOX_TOKEN:
      secure: LcGRn2EgQDbAbxRIzPS4O74oLtAgwahF164cKFQkQN8JiJGA5heebM1boqB4vtPI3TVJsyJZ8pU4q4U80zSrV19akC3DQVfvh5utQ89hjt8=

  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python35\\python.exe"
      VARSARG: "amd64_x86"
      ARCHSTR: " (x86)"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python35-x64\\python.exe"
      VARSARG: "amd64"
      ARCHSTR: ""
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python36\\python.exe"
      VARSARG: "amd64_x86"
      ARCHSTR: " (x86)"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python36-x64\\python.exe"
      VARSARG: "amd64"
      ARCHSTR: ""

install:
  - "%PYTHON% -m pip install -r requirements.txt -f downloads --cache-dir downloads"
  - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall" %VARSARG%'

build_script:
  # compile assimp if missing
  - ps: $env:IS_BUILT=(Test-Path ("C:\Program Files" + ${env:ARCHSTR} + "\Assimp\lib"))
  - ps: if ($env:IS_BUILT -eq $False -And !(Test-Path "downloads\assimp.zip")){Start-FileDownload https://github.com/assimp/assimp/archive/v4.1.0.zip -FileName "downloads\assimp.zip"}
  - ps: if ($env:IS_BUILT -eq $False){Expand-Archive downloads\assimp.zip -DestinationPath assimp_unzipped}
  - IF %IS_BUILT%==False (ci_scripts\buildAssimp.cmd)

  # save compilation results
#  - 7z a release.zip code\Release
#  - ps: Push-AppveyorArtifact release.zip

  # build module and install"
  - "%PYTHON% setup.py build_ext"
  - "%PYTHON% setup.py install"

test_script:
  # copy dll to test folder"
  - copy "C:\\Program Files%ARCHSTR%\\Assimp\\bin\\*.dll" tests\
  - cd tests
  - "%PYTHON% -m unittest test_simple"
  - cd ..
  # copy dll to artifact folder
  - mkdir "dll_%VARSARG%"
  - copy "C:\\Program Files%ARCHSTR%\\Assimp\\bin\\*.dll" "dll_%VARSARG%\\"

after_test:
  # install dropbox for uploads
  - "%PYTHON% -m pip install dropbox -f downloads --cache-dir downloads"
  # build wheels.
  - "%PYTHON% ci_scripts\\buildWindowsWheels.py dist dist"
  # upload 32bits dlls.
  - "%PYTHON% ci_scripts\\dropboxUpload.py dll_amd64_x86 dlls32"
  # upload 64bits dlls.
  - "%PYTHON% ci_scripts\\dropboxUpload.py dll_amd64 dlls64"

#artifacts:
#  - path: dll_amd64_x86\*
#    name: dlls32
#  - path: dll_amd64\*
#    name: dlls64
#   bdist_wheel puts your built wheel in the dist directory
#  - path: dist\*
#    name: mydist

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.